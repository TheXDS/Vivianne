<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arg1" xml:space="preserve">
    <value>fsh/qfs file</value>
  </data>
  <data name="Arg1Description" xml:space="preserve">
    <value>Path to the FSH/QFS file.</value>
  </data>
  <data name="BlobInfo_Arg1Help" xml:space="preserve">
    <value>Specifies the name of the blob to get the information about. If omitted, thi
s tool will print the information of all blobs in the FSH file.</value>
  </data>
  <data name="BlobInfo_Arg1" xml:space="preserve">
    <value>blob name</value>
  </data>
  <data name="BlobInfo_Help" xml:space="preserve">
    <value>Displays general information about the specified FSH blob.</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Performs operations on FSH and QFS files.</value>
  </data>
  <data name="Common_HumanOptionHelp" xml:space="preserve">
    <value>Blob sizes will be formatted in human-readable format.</value>
  </data>
  <data name="BlobInfo_BlobName" xml:space="preserve">
    <value>Blob Name: {0}</value>
  </data>
  <data name="BlobInfo_Fail" xml:space="preserve">
    <value>No such blob entry has been found in the specified FSH file.</value>
  </data>
  <data name="BlobInfo_PrintBlobInfo1" xml:space="preserve">
    <value>Blob resolution: {0}x{1}</value>
  </data>
  <data name="BlobInfo_PrintBlobInfo2" xml:space="preserve">
    <value>Pixel format: {0}</value>
  </data>
  <data name="BlobInfo_PrintBlobInfo3" xml:space="preserve">
    <value>Rotation axis: X:{0}, Y:{1}</value>
  </data>
  <data name="BlobInfo_PrintBlobInfo4" xml:space="preserve">
    <value>Image offset: X:{0}, Y:{1}</value>
  </data>
  <data name="BlobInfo_PrintBlobInfo5" xml:space="preserve">
    <value>Pixel data size: {0}</value>
  </data>
  <data name="BlobInfo_PrintBlobInfo6" xml:space="preserve">
    <value>Footer data: {0}</value>
  </data>
  <data name="Compress_Help" xml:space="preserve">
    <value>Converts a FSH file into a QFS file.</value>
  </data>
  <data name="Compress_OutputOptionHelp" xml:space="preserve">
    <value>Specifies a file to write the compressed FSH into. If omitted, the compressed data will be written to stdout.</value>
  </data>
  <data name="Compress_Fail" xml:space="preserve">
    <value>Could not load the specified file as a FSH file: {0}</value>
  </data>
  <data name="Decompress_Help" xml:space="preserve">
    <value>Converts a QFS file into a FSH file.</value>
  </data>
  <data name="Decompress_OutputOptionHelp" xml:space="preserve">
    <value>Specifies a file to write the decompressed FSH into. If omitted, the compressed data will be written to stdout.</value>
  </data>
  <data name="Decompress_Fail" xml:space="preserve">
    <value>Could not load the specified file as a FSH file: {0}</value>
  </data>
  <data name="Extract_FormatOptionHelp" xml:space="preserve">
    <value>File format to use when exporting the blobs to images.</value>
  </data>
  <data name="Extract_Help" xml:space="preserve">
    <value>Extracts an image blob from within the specified FSH.</value>
  </data>
  <data name="Extract_OutdirOptionHelp" xml:space="preserve">
    <value>Output directory to write the blob(s) into. Defaults to the current path.</value>
  </data>
  <data name="Extract_RegexArg" xml:space="preserve">
    <value>blob(s) regex</value>
  </data>
  <data name="Extract_RegexArgHelp" xml:space="preserve">
    <value>Expression/regex that indicates the blob(s) to be extracted from within the specified FSH. If omitted, all blobs will be extracted.</value>
  </data>
  <data name="Info_Help" xml:space="preserve">
    <value>Displays general information about the FSH/QFS file.</value>
  </data>
  <data name="Info_Info1" xml:space="preserve">
    <value>Blobs in FSH: {0}</value>
  </data>
  <data name="Info_Info2" xml:space="preserve">
    <value>Directory ID: {0}</value>
  </data>
  <data name="Info_Info3" xml:space="preserve">
    <value>File size: {0}</value>
  </data>
  <data name="Info_Info4" xml:space="preserve">
    <value>Is FSH file compressed: yes</value>
  </data>
  <data name="Info_Info5" xml:space="preserve">
    <value>Uncompressed payload size: {0}</value>
  </data>
  <data name="Info_Info6" xml:space="preserve">
    <value>Compression ratio: {0:f2}:1</value>
  </data>
  <data name="Info_Info7" xml:space="preserve">
    <value>Is FSH file compressed: no</value>
  </data>
  <data name="Ls_DecimalOptionHelp" xml:space="preserve">
    <value>The blob offsets will be presented in decimal format.</value>
  </data>
  <data name="Ls_Help" xml:space="preserve">
    <value>Enumerates all blobs on the FSH/QFS file.</value>
  </data>
  <data name="Ls_OffsetOptionHelp" xml:space="preserve">
    <value>Includes the blob offset in the listing.</value>
  </data>
  <data name="Ls_SizeOptionHelp" xml:space="preserve">
    <value>Includes the blob size in the listing.</value>
  </data>
</root>