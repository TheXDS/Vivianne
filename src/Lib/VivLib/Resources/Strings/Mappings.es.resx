<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FshBlobToLabel_Palette32" xml:space="preserve">
    <value>Paleta de color de 32 bits</value>
  </data>
  <data name="FshBlobToLabel_Indexed8" xml:space="preserve">
    <value>Mapa de bits de 8 bits (256 colores) con paleta</value>
  </data>
  <data name="FshBlobToLabel_Rgb565" xml:space="preserve">
    <value>Color de 16 bits (RGB565), sin alfa</value>
  </data>
  <data name="FshBlobToLabel_Argb32" xml:space="preserve">
    <value>Color de 24 bits con 8 bits de alfa (ARGB32)</value>
  </data>
  <data name="FshBlobToLabel_Argb1555" xml:space="preserve">
    <value>Color de 16 bits con 1 bit de alfa (ARGB1555)</value>
  </data>
  <data name="FshBlobToLabel_Palette24Dos" xml:space="preserve">
    <value>Paleta de 24 bits, variante DOS</value>
  </data>
  <data name="FshBlobToLabel_Palette24" xml:space="preserve">
    <value>Paleta de 24 bits</value>
  </data>
  <data name="FshBlobToLabel_Palette16Nfs5" xml:space="preserve">
    <value>Paleta de 16 bits, variante de NFS5</value>
  </data>
  <data name="FshBlobToLabel_Palette16" xml:space="preserve">
    <value>Paleta de 16 bits</value>
  </data>
  <data name="FshBlobToLabel_Rgb24" xml:space="preserve">
    <value>Color de 24 bits sin alfa (RGB24)</value>
  </data>
  <data name="FshBlobToLabel_Dxt3" xml:space="preserve">
    <value>Textura con compresión DXT3</value>
  </data>
  <data name="FshBlobToLabel_Dxt4" xml:space="preserve">
    <value>Textura con compresión DXT4</value>
  </data>
  <data name="FshBlobFooterToLabel_None" xml:space="preserve">
    <value>Sin datos de pié</value>
  </data>
  <data name="FshBlobFooterToLabel_CarDashboard" xml:space="preserve">
    <value>Datos de cabina</value>
  </data>
  <data name="FshBlobFooterToLabel_ColorPalette" xml:space="preserve">
    <value>Paleta de colores local</value>
  </data>
  <data name="FshBlobFooterToLabel_Padding" xml:space="preserve">
    <value>Ceros de espaciado</value>
  </data>
  <data name="FasBlobToLabel_LzRgb565" xml:space="preserve">
    <value>RGB565 con compresión LZ</value>
  </data>
  <data name="FshBlobToLabel_Argb4444" xml:space="preserve">
    <value>Color 4:4:4:4 de 16 bits (RGBA4444)</value>
  </data>
  <data name="FshBlobToLabel_LzArgb32" xml:space="preserve">
    <value>ARGB32 con compresión LZ</value>
  </data>
  <data name="FshBlobToLabel_LzArgb1555" xml:space="preserve">
    <value>ARGB1555 con compresión LZ</value>
  </data>
  <data name="FshBlobToLabel_Dxt1" xml:space="preserve">
    <value>Textura con compresión DXT1</value>
  </data>
  <data name="FshBlobFooterToLabel_MetalBin" xml:space="preserve">
    <value>Adjunto de Metal bin</value>
  </data>
  <data name="FshBlobFooterToLabel_BlobName" xml:space="preserve">
    <value>Nombre de blob</value>
  </data>
  <data name="FceMagicToString_Fce4" xml:space="preserve">
    <value>FCE de Need For Speed 4</value>
  </data>
  <data name="FceMagicToString_Fce4M" xml:space="preserve">
    <value>FCE de Motor City Online</value>
  </data>
  <data name="FceMagicToString_Unknown" xml:space="preserve">
    <value>desconocido</value>
  </data>
  <data name="FceMagicToString_Fce3" xml:space="preserve">
    <value>FCE de Need For Speed 3</value>
  </data>
</root>